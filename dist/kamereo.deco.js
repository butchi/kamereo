!function 赤(橙,黄,緑){function 青(紫,赤赤){if(!黄[紫]){if(!橙[紫]){var 橙赤="function"==typeof require&&require;if(!赤赤&&橙赤)return 橙赤(紫,!0);if(藍)return 藍(紫,!0);var 黄赤=new Error("Cannot find module '"+紫+"'");throw 黄赤.code="MODULE_NOT_FOUND",黄赤}var 緑赤=黄[紫]={exports:{}};橙[紫][0].call(緑赤.exports,function(赤){var 黄=橙[紫][1][赤];return 青(黄?黄:赤)},緑赤,緑赤.exports,赤,橙,黄,緑)}return 黄[紫].exports}for(var 藍="function"==typeof require&&require,紫=0;紫<緑.length;紫++)青(緑[紫]);return 青}({1:[function(赤,橙,黄){(function(緑,青){/*!
 * @overview es6-promise - a tiny implementation of Promises/A+.
 * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)
 * @license   Licensed under MIT license
 *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE
 * @version   4.0.5
 */
!function(赤,緑){"object"==typeof 黄&&"undefined"!=typeof 橙?橙.exports=緑():"function"==typeof define&&define.amd?define(緑):赤.ES6Promise=緑()}(this,function(){"use strict";function 橙(赤){return"function"==typeof 赤||"object"==typeof 赤&&null!==赤}function 黄(赤){return"function"==typeof 赤}function 藍(赤){赤紫=赤}function 紫(赤){橙紫=赤}function 赤赤(){return function(){return 緑.nextTick(藍赤)}}function 橙赤(){return"undefined"!=typeof 紫藍?function(){紫藍(藍赤)}:青赤()}function 黄赤(){var 赤=0,橙=new 青紫(藍赤),黄=document.createTextNode("");return 橙.observe(黄,{characterData:!0}),function(){黄.data=赤=++赤%2}}function 緑赤(){var 赤=new MessageChannel;return 赤.port1.onmessage=藍赤,function(){return 赤.port2.postMessage(0)}}function 青赤(){var 赤=setTimeout;return function(){return 赤(藍赤,1)}}function 藍赤(){for(var 赤=0;藍藍>赤;赤+=2){var 橙=赤赤赤[赤],黄=赤赤赤[赤+1];橙(黄),赤赤赤[赤]=void 0,赤赤赤[赤+1]=void 0}藍藍=0}function 紫赤(){try{var 橙=赤,黄=橙("vertx");return 紫藍=黄.runOnLoop||黄.runOnContext,橙赤()}catch(緑){return 青赤()}}function 赤橙(赤,橙){var 黄=arguments,緑=this,青=new this.constructor(黄橙);void 0===青[黄赤赤]&&赤青(青);var 藍=緑._state;return 藍?!function(){var 赤=黄[藍-1];橙紫(function(){return 青緑(藍,青,赤,緑._result)})}():赤緑(緑,青,赤,橙),青}function 橙橙(赤){var 橙=this;if(赤&&"object"==typeof 赤&&赤.constructor===橙)return 赤;var 黄=new 橙(黄橙);return 緑黄(黄,赤),黄}function 黄橙(){}function 緑橙(){return new TypeError("You cannot resolve a promise with itself")}function 青橙(){return new TypeError("A promises callback cannot return that same promise.")}function 藍橙(赤){try{return 赤.then}catch(橙){return 紫赤赤.error=橙,紫赤赤}}function 紫橙(赤,橙,黄,緑){try{赤.call(橙,黄,緑)}catch(青){return 青}}function 赤黄(赤,橙,黄){橙紫(function(赤){var 緑=!1,青=紫橙(黄,橙,function(黄){緑||(緑=!0,橙!==黄?緑黄(赤,黄):藍黄(赤,黄))},function(橙){緑||(緑=!0,紫黄(赤,橙))},"Settle: "+(赤._label||" unknown promise"));!緑&&青&&(緑=!0,紫黄(赤,青))},赤)}function 橙黄(赤,橙){橙._state===青赤赤?藍黄(赤,橙._result):橙._state===藍赤赤?紫黄(赤,橙._result):赤緑(橙,void 0,function(橙){return 緑黄(赤,橙)},function(橙){return 紫黄(赤,橙)})}function 黄黄(赤,橙,緑){橙.constructor===赤.constructor&&緑===赤橙&&橙.constructor.resolve===橙橙?橙黄(赤,橙):緑===紫赤赤?紫黄(赤,紫赤赤.error):void 0===緑?藍黄(赤,橙):黄(緑)?赤黄(赤,橙,緑):藍黄(赤,橙)}function 緑黄(赤,黄){赤===黄?紫黄(赤,緑橙()):橙(黄)?黄黄(赤,黄,藍橙(黄)):藍黄(赤,黄)}function 青黄(赤){赤._onerror&&赤._onerror(赤._result),橙緑(赤)}function 藍黄(赤,橙){赤._state===緑赤赤&&(赤._result=橙,赤._state=青赤赤,0!==赤._subscribers.length&&橙紫(橙緑,赤))}function 紫黄(赤,橙){赤._state===緑赤赤&&(赤._state=藍赤赤,赤._result=橙,橙紫(青黄,赤))}function 赤緑(赤,橙,黄,緑){var 青=赤._subscribers,藍=青.length;赤._onerror=null,青[藍]=橙,青[藍+青赤赤]=黄,青[藍+藍赤赤]=緑,0===藍&&赤._state&&橙紫(橙緑,赤)}function 橙緑(赤){var 橙=赤._subscribers,黄=赤._state;if(0!==橙.length){for(var 緑=void 0,青=void 0,藍=赤._result,紫=0;紫<橙.length;紫+=3)緑=橙[紫],青=橙[紫+黄],緑?青緑(黄,緑,青,藍):青(藍);赤._subscribers.length=0}}function 黄緑(){this.error=null}function 緑緑(赤,橙){try{return 赤(橙)}catch(黄){return 赤橙赤.error=黄,赤橙赤}}function 青緑(赤,橙,緑,青){var 藍=黄(緑),紫=void 0,赤赤=void 0,橙赤=void 0,黄赤=void 0;if(藍){if(紫=緑緑(緑,青),紫===赤橙赤?(黄赤=!0,赤赤=紫.error,紫=null):橙赤=!0,橙===紫)return void 紫黄(橙,青橙())}else 紫=青,橙赤=!0;橙._state!==緑赤赤||(藍&&橙赤?緑黄(橙,紫):黄赤?紫黄(橙,赤赤):赤===青赤赤?藍黄(橙,紫):赤===藍赤赤&&紫黄(橙,紫))}function 藍緑(赤,橙){try{橙(function(橙){緑黄(赤,橙)},function(橙){紫黄(赤,橙)})}catch(黄){紫黄(赤,黄)}}function 紫緑(){return 橙橙赤++}function 赤青(赤){赤[黄赤赤]=橙橙赤++,赤._state=void 0,赤._result=void 0,赤._subscribers=[]}function 橙青(赤,橙){this._instanceConstructor=赤,this.promise=new 赤(黄橙),this.promise[黄赤赤]||赤青(this.promise),青藍(橙)?(this._input=橙,this.length=橙.length,this._remaining=橙.length,this._result=new Array(this.length),0===this.length?藍黄(this.promise,this._result):(this.length=this.length||0,this._enumerate(),0===this._remaining&&藍黄(this.promise,this._result))):紫黄(this.promise,黄青())}function 黄青(){return new Error("Array Methods must be provided an Array")}function 緑青(赤){return new 橙青(this,赤).promise}function 青青(赤){var 橙=this;return new 橙(青藍(赤)?function(黄,緑){for(var 青=赤.length,藍=0;青>藍;藍++)橙.resolve(赤[藍]).then(黄,緑)}:function(赤,橙){return 橙(new TypeError("You must pass an array to race."))})}function 藍青(赤){var 橙=this,黄=new 橙(黄橙);return 紫黄(黄,赤),黄}function 紫青(){throw new TypeError("You must pass a resolver function as the first argument to the promise constructor")}function 赤藍(){throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.")}function 橙藍(赤){this[黄赤赤]=紫緑(),this._result=this._state=void 0,this._subscribers=[],黄橙!==赤&&("function"!=typeof 赤&&紫青(),this instanceof 橙藍?藍緑(this,赤):赤藍())}function 黄藍(){var 赤=void 0;if("undefined"!=typeof 青)赤=青;else if("undefined"!=typeof self)赤=self;else try{赤=Function("return this")()}catch(橙){throw new Error("polyfill failed because global object is unavailable in this environment")}var 黄=赤.Promise;if(黄){var 緑=null;try{緑=Object.prototype.toString.call(黄.resolve())}catch(橙){}if("[object Promise]"===緑&&!黄.cast)return}赤.Promise=橙藍}var 緑藍=void 0;緑藍=Array.isArray?Array.isArray:function(赤){return"[object Array]"===Object.prototype.toString.call(赤)};var 青藍=緑藍,藍藍=0,紫藍=void 0,赤紫=void 0,橙紫=function(赤,橙){赤赤赤[藍藍]=赤,赤赤赤[藍藍+1]=橙,藍藍+=2,2===藍藍&&(赤紫?赤紫(藍赤):橙赤赤())},黄紫="undefined"!=typeof window?window:void 0,緑紫=黄紫||{},青紫=緑紫.MutationObserver||緑紫.WebKitMutationObserver,藍紫="undefined"==typeof self&&"undefined"!=typeof 緑&&"[object process]"==={}.toString.call(緑),紫紫="undefined"!=typeof Uint8ClampedArray&&"undefined"!=typeof importScripts&&"undefined"!=typeof MessageChannel,赤赤赤=new Array(1e3),橙赤赤=void 0;橙赤赤=藍紫?赤赤():青紫?黄赤():紫紫?緑赤():void 0===黄紫&&"function"==typeof 赤?紫赤():青赤();var 黄赤赤=Math.random().toString(36).substring(16),緑赤赤=void 0,青赤赤=1,藍赤赤=2,紫赤赤=new 黄緑,赤橙赤=new 黄緑,橙橙赤=0;return 橙青.prototype._enumerate=function(){for(var 赤=this.length,橙=this._input,黄=0;this._state===緑赤赤&&赤>黄;黄++)this._eachEntry(橙[黄],黄)},橙青.prototype._eachEntry=function(赤,橙){var 黄=this._instanceConstructor,緑=黄.resolve;if(緑===橙橙){var 青=藍橙(赤);if(青===赤橙&&赤._state!==緑赤赤)this._settledAt(赤._state,橙,赤._result);else if("function"!=typeof 青)this._remaining--,this._result[橙]=赤;else if(黄===橙藍){var 藍=new 黄(黄橙);黄黄(藍,赤,青),this._willSettleAt(藍,橙)}else this._willSettleAt(new 黄(function(橙){return 橙(赤)}),橙)}else this._willSettleAt(緑(赤),橙)},橙青.prototype._settledAt=function(赤,橙,黄){var 緑=this.promise;緑._state===緑赤赤&&(this._remaining--,赤===藍赤赤?紫黄(緑,黄):this._result[橙]=黄),0===this._remaining&&藍黄(緑,this._result)},橙青.prototype._willSettleAt=function(赤,橙){var 黄=this;赤緑(赤,void 0,function(赤){return 黄._settledAt(青赤赤,橙,赤)},function(赤){return 黄._settledAt(藍赤赤,橙,赤)})},橙藍.all=緑青,橙藍.race=青青,橙藍.resolve=橙橙,橙藍.reject=藍青,橙藍._setScheduler=藍,橙藍._setAsap=紫,橙藍._asap=橙紫,橙藍.prototype={constructor:橙藍,then:赤橙,"catch":function(赤){return this.then(null,赤)}},橙藍.polyfill=黄藍,橙藍.Promise=橙藍,橙藍})}).call(this,赤("_process"),"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{_process:2}],2:[function(赤,橙,黄){function 緑(){throw new Error("setTimeout has not been defined")}function 青(){throw new Error("clearTimeout has not been defined")}function 藍(赤){if(青赤===setTimeout)return setTimeout(赤,0);if((青赤===緑||!青赤)&&setTimeout)return 青赤=setTimeout,setTimeout(赤,0);try{return 青赤(赤,0)}catch(橙){try{return 青赤.call(null,赤,0)}catch(橙){return 青赤.call(this,赤,0)}}}function 紫(赤){if(藍赤===clearTimeout)return clearTimeout(赤);if((藍赤===青||!藍赤)&&clearTimeout)return 藍赤=clearTimeout,clearTimeout(赤);try{return 藍赤(赤)}catch(橙){try{return 藍赤.call(null,赤)}catch(橙){return 藍赤.call(this,赤)}}}function 赤赤(){黄橙&&赤橙&&(黄橙=!1,赤橙.length?橙橙=赤橙.concat(橙橙):緑橙=-1,橙橙.length&&橙赤())}function 橙赤(){if(!黄橙){var 赤=藍(赤赤);黄橙=!0;for(var 橙=橙橙.length;橙;){for(赤橙=橙橙,橙橙=[];++緑橙<橙;)赤橙&&赤橙[緑橙].run();緑橙=-1,橙=橙橙.length}赤橙=null,黄橙=!1,紫(赤)}}function 黄赤(赤,橙){this.fun=赤,this.array=橙}function 緑赤(){}var 青赤,藍赤,紫赤=橙.exports={};!function(){try{青赤="function"==typeof setTimeout?setTimeout:緑}catch(赤){青赤=緑}try{藍赤="function"==typeof clearTimeout?clearTimeout:青}catch(赤){藍赤=青}}();var 赤橙,橙橙=[],黄橙=!1,緑橙=-1;紫赤.nextTick=function(赤){var 橙=new Array(arguments.length-1);if(arguments.length>1)for(var 黄=1;黄<arguments.length;黄++)橙[黄-1]=arguments[黄];橙橙.push(new 黄赤(赤,橙)),1!==橙橙.length||黄橙||藍(橙赤)},黄赤.prototype.run=function(){this.fun.apply(null,this.array)},紫赤.title="browser",紫赤.browser=!0,紫赤.env={},紫赤.argv=[],紫赤.version="",紫赤.versions={},紫赤.on=緑赤,紫赤.addListener=緑赤,紫赤.once=緑赤,紫赤.off=緑赤,紫赤.removeListener=緑赤,紫赤.removeAllListeners=緑赤,紫赤.emit=緑赤,紫赤.binding=function(赤){throw new Error("process.binding is not supported")},紫赤.cwd=function(){return"/"},紫赤.chdir=function(赤){throw new Error("process.chdir is not supported")},紫赤.umask=function(){return 0}},{}],3:[function(赤,橙,黄){!function(赤){"use strict";function 橙(赤){if("string"!=typeof 赤&&(赤=String(赤)),/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(赤))throw new TypeError("Invalid character in header field name");return 赤.toLowerCase()}function 黄(赤){return"string"!=typeof 赤&&(赤=String(赤)),赤}function 緑(赤){var 橙={next:function(){var 橙=赤.shift();return{done:void 0===橙,value:橙}}};return 緑橙.iterable&&(橙[Symbol.iterator]=function(){return 橙}),橙}function 青(赤){this.map={},赤 instanceof 青?赤.forEach(function(赤,橙){this.append(橙,赤)},this):赤&&Object.getOwnPropertyNames(赤).forEach(function(橙){this.append(橙,赤[橙])},this)}function 藍(赤){return 赤.bodyUsed?Promise.reject(new TypeError("Already read")):void(赤.bodyUsed=!0)}function 紫(赤){return new Promise(function(橙,黄){赤.onload=function(){橙(赤.result)},赤.onerror=function(){黄(赤.error)}})}function 赤赤(赤){var 橙=new FileReader,黄=紫(橙);return 橙.readAsArrayBuffer(赤),黄}function 橙赤(赤){var 橙=new FileReader,黄=紫(橙);return 橙.readAsText(赤),黄}function 黄赤(赤){for(var 橙=new Uint8Array(赤),黄=new Array(橙.length),緑=0;緑<橙.length;緑++)黄[緑]=String.fromCharCode(橙[緑]);return 黄.join("")}function 緑赤(赤){if(赤.slice)return 赤.slice(0);var 橙=new Uint8Array(赤.byteLength);return 橙.set(new Uint8Array(赤)),橙.buffer}function 青赤(){return this.bodyUsed=!1,this._initBody=function(赤){if(this._bodyInit=赤,赤)if("string"==typeof 赤)this._bodyText=赤;else if(緑橙.blob&&Blob.prototype.isPrototypeOf(赤))this._bodyBlob=赤;else if(緑橙.formData&&FormData.prototype.isPrototypeOf(赤))this._bodyFormData=赤;else if(緑橙.searchParams&&URLSearchParams.prototype.isPrototypeOf(赤))this._bodyText=赤.toString();else if(緑橙.arrayBuffer&&緑橙.blob&&藍橙(赤))this._bodyArrayBuffer=緑赤(赤.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer]);else{if(!緑橙.arrayBuffer||!ArrayBuffer.prototype.isPrototypeOf(赤)&&!紫橙(赤))throw new Error("unsupported BodyInit type");this._bodyArrayBuffer=緑赤(赤)}else this._bodyText="";this.headers.get("content-type")||("string"==typeof 赤?this.headers.set("content-type","text/plain;charset=UTF-8"):this._bodyBlob&&this._bodyBlob.type?this.headers.set("content-type",this._bodyBlob.type):緑橙.searchParams&&URLSearchParams.prototype.isPrototypeOf(赤)&&this.headers.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"))},緑橙.blob&&(this.blob=function(){var 赤=藍(this);if(赤)return 赤;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error("could not read FormData body as blob");return Promise.resolve(new Blob([this._bodyText]))},this.arrayBuffer=function(){return this._bodyArrayBuffer?藍(this)||Promise.resolve(this._bodyArrayBuffer):this.blob().then(赤赤)}),this.text=function(){var 赤=藍(this);if(赤)return 赤;if(this._bodyBlob)return 橙赤(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(黄赤(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error("could not read FormData body as text");return Promise.resolve(this._bodyText)},緑橙.formData&&(this.formData=function(){return this.text().then(赤橙)}),this.json=function(){return this.text().then(JSON.parse)},this}function 藍赤(赤){var 橙=赤.toUpperCase();return 赤黄.indexOf(橙)>-1?橙:赤}function 紫赤(赤,橙){橙=橙||{};var 黄=橙.body;if(赤 instanceof 紫赤){if(赤.bodyUsed)throw new TypeError("Already read");this.url=赤.url,this.credentials=赤.credentials,橙.headers||(this.headers=new 青(赤.headers)),this.method=赤.method,this.mode=赤.mode,黄||null==赤._bodyInit||(黄=赤._bodyInit,赤.bodyUsed=!0)}else this.url=String(赤);if(this.credentials=橙.credentials||this.credentials||"omit",(橙.headers||!this.headers)&&(this.headers=new 青(橙.headers)),this.method=藍赤(橙.method||this.method||"GET"),this.mode=橙.mode||this.mode||null,this.referrer=null,("GET"===this.method||"HEAD"===this.method)&&黄)throw new TypeError("Body not allowed for GET or HEAD requests");this._initBody(黄)}function 赤橙(赤){var 橙=new FormData;return 赤.trim().split("&").forEach(function(赤){if(赤){var 黄=赤.split("="),緑=黄.shift().replace(/\+/g," "),青=黄.join("=").replace(/\+/g," ");橙.append(decodeURIComponent(緑),decodeURIComponent(青))}}),橙}function 橙橙(赤){var 橙=new 青;return 赤.split(/\r?\n/).forEach(function(赤){var 黄=赤.split(":"),緑=黄.shift().trim();if(緑){var 青=黄.join(":").trim();橙.append(緑,青)}}),橙}function 黄橙(赤,橙){橙||(橙={}),this.type="default",this.status="status"in 橙?橙.status:200,this.ok=this.status>=200&&this.status<300,this.statusText="statusText"in 橙?橙.statusText:"OK",this.headers=new 青(橙.headers),this.url=橙.url||"",this._initBody(赤)}if(!赤.fetch){var 緑橙={searchParams:"URLSearchParams"in 赤,iterable:"Symbol"in 赤&&"iterator"in Symbol,blob:"FileReader"in 赤&&"Blob"in 赤&&function(){try{return new Blob,!0}catch(赤){return!1}}(),formData:"FormData"in 赤,arrayBuffer:"ArrayBuffer"in 赤};if(緑橙.arrayBuffer)var 青橙=["[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]"],藍橙=function(赤){return 赤&&DataView.prototype.isPrototypeOf(赤)},紫橙=ArrayBuffer.isView||function(赤){return 赤&&青橙.indexOf(Object.prototype.toString.call(赤))>-1};青.prototype.append=function(赤,緑){赤=橙(赤),緑=黄(緑);var 青=this.map[赤];this.map[赤]=青?青+","+緑:緑},青.prototype["delete"]=function(赤){delete this.map[橙(赤)]},青.prototype.get=function(赤){return 赤=橙(赤),this.has(赤)?this.map[赤]:null},青.prototype.has=function(赤){return this.map.hasOwnProperty(橙(赤))},青.prototype.set=function(赤,緑){this.map[橙(赤)]=黄(緑)},青.prototype.forEach=function(赤,橙){for(var 黄 in this.map)this.map.hasOwnProperty(黄)&&赤.call(橙,this.map[黄],黄,this)},青.prototype.keys=function(){var 赤=[];return this.forEach(function(橙,黄){赤.push(黄)}),緑(赤)},青.prototype.values=function(){var 赤=[];return this.forEach(function(橙){赤.push(橙)}),緑(赤)},青.prototype.entries=function(){var 赤=[];return this.forEach(function(橙,黄){赤.push([黄,橙])}),緑(赤)},緑橙.iterable&&(青.prototype[Symbol.iterator]=青.prototype.entries);var 赤黄=["DELETE","GET","HEAD","OPTIONS","POST","PUT"];紫赤.prototype.clone=function(){return new 紫赤(this,{body:this._bodyInit})},青赤.call(紫赤.prototype),青赤.call(黄橙.prototype),黄橙.prototype.clone=function(){return new 黄橙(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new 青(this.headers),url:this.url})},黄橙.error=function(){var 赤=new 黄橙(null,{status:0,statusText:""});return 赤.type="error",赤};var 橙黄=[301,302,303,307,308];黄橙.redirect=function(赤,橙){if(-1===橙黄.indexOf(橙))throw new RangeError("Invalid status code");return new 黄橙(null,{status:橙,headers:{location:赤}})},赤.Headers=青,赤.Request=紫赤,赤.Response=黄橙,赤.fetch=function(赤,橙){return new Promise(function(黄,緑){var 青=new 紫赤(赤,橙),藍=new XMLHttpRequest;藍.onload=function(){var 赤={status:藍.status,statusText:藍.statusText,headers:橙橙(藍.getAllResponseHeaders()||"")};赤.url="responseURL"in 藍?藍.responseURL:赤.headers.get("X-Request-URL");var 橙="response"in 藍?藍.response:藍.responseText;黄(new 黄橙(橙,赤))},藍.onerror=function(){緑(new TypeError("Network request failed"))},藍.ontimeout=function(){緑(new TypeError("Network request failed"))},藍.open(青.method,青.url,!0),"include"===青.credentials&&(藍.withCredentials=!0),"responseType"in 藍&&緑橙.blob&&(藍.responseType="blob"),青.headers.forEach(function(赤,橙){藍.setRequestHeader(橙,赤)}),藍.send("undefined"==typeof 青._bodyInit?null:青._bodyInit)})},赤.fetch.polyfill=!0}}("undefined"!=typeof self?self:this)},{}],4:[function(赤,橙,黄){"use strict";function 緑(赤){return 赤&&赤.__esModule?赤:{"default":赤}}function 青(赤,橙){if(!(赤 instanceof 橙))throw new TypeError("Cannot call a class as a function")}function 藍(赤){if(赤.match(/^#[0-9a-fA-F]+$/)||赤.match(/^[a-zA-Z]+$/))return[赤];var 橙=void 0;赤=赤.replace(/\'/g,'"');try{橙=JSON.parse(赤)}catch(黄){console.error("invalid color.")}return 橙}Object.defineProperty(黄,"__esModule",{value:!0});var 紫=function(){function 赤(赤,橙){var 黄=[],緑=!0,青=!1,藍=void 0;try{for(var 紫,赤赤=赤[Symbol.iterator]();!(緑=(紫=赤赤.next()).done)&&(黄.push(紫.value),!橙||黄.length!==橙);緑=!0);}catch(橙赤){青=!0,藍=橙赤}finally{try{!緑&&赤赤["return"]&&赤赤["return"]()}finally{if(青)throw 藍}}return 黄}return function(橙,黄){if(Array.isArray(橙))return 橙;if(Symbol.iterator in Object(橙))return 赤(橙,黄);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),赤赤=function(){function 赤(赤,橙){for(var 黄=0;黄<橙.length;黄++){var 緑=橙[黄];緑.enumerable=緑.enumerable||!1,緑.configurable=!0,"value"in 緑&&(緑.writable=!0),Object.defineProperty(赤,緑.key,緑)}}return function(橙,黄,緑){return 黄&&赤(橙.prototype,黄),緑&&赤(橙,緑),橙}}();赤("whatwg-fetch");var 橙赤=赤("es6-promise"),黄赤=緑(橙赤);黄赤["default"].polyfill();var 緑赤=function(){function 赤(){var 橙=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};青(this,赤),this.initialize(橙)}return 赤赤(赤,[{key:"initialize",value:function(){var 赤=this,橙=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.elm=橙.elm;var 黄=this.elm.getAttribute("data-src")||橙.src,緑=橙.from,青=橙.to,赤赤=this.elm.getAttribute("data-color-from"),橙赤=this.elm.getAttribute("data-color-to");赤赤&&(this.fromArr=藍(赤赤)),null==緑||("string"==typeof 緑?this.fromArr=[緑]:緑 instanceof Array&&(this.fromArr=緑)),橙赤&&(this.toArr=藍(橙赤)),null==青||("string"==typeof 青?this.toArr=[青]:青 instanceof Array&&(this.toArr=青)),this.apply=橙.apply,fetch(黄).then(function(赤){return 赤.text()}).then(function(黄){var 緑=new DOMParser,青=緑.parseFromString(黄,"image/svg+xml");if("function"==typeof 赤.apply){青=赤.apply(青);var 藍=new XMLSerializer;黄=藍.serializeToString(青)}var 赤赤=黄;if(赤.fromArr&&赤.toArr)if(1===赤.toArr.length)for(var 橙赤=0;橙赤<赤.fromArr.length;橙赤++)赤赤=赤赤.replace(赤.fromArr[橙赤],赤.toArr[0]);else for(var 黄赤=Math.min(赤.fromArr.length,赤.toArr.length),緑赤=0;黄赤>緑赤;緑赤++)赤赤=赤赤.replace(赤.fromArr[緑赤],赤.toArr[緑赤]);var 青赤=encodeURIComponent(赤赤);赤.elm.style["background-image"]='url("data:image/svg+xml,'+青赤+'")';var 藍赤=橙.autoSizing||!1;if(藍赤="true"===赤.elm.getAttribute("data-auto-sizing")||藍赤){var 紫赤=黄.match(/viewBox="([0-9]+) ([0-9]+) ([0-9]+) ([0-9]+)"/).slice(3,5),赤橙=紫(紫赤,2),橙橙=赤橙[0],黄橙=赤橙[1];赤.elm.style.width=橙橙+"px",赤.elm.style.height=黄橙+"px"}})}}]),赤}();黄["default"]=緑赤},{"es6-promise":1,"whatwg-fetch":3}],5:[function(赤,橙,黄){(function(橙){"use strict";function 黄(赤){return 赤&&赤.__esModule?赤:{"default":赤}}var 緑=赤("./kamereo-core"),青=黄(緑);if(橙.document){var 藍=document.querySelectorAll("[data-kamereo-element]");[].forEach.call(藍,function(赤){new 青["default"]({elm:赤})})}橙.jQuery&&(jQuery.fn.kamereo=function(){var 赤=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.each(function(橙,黄){赤.elm=黄,new 青["default"](赤)})}),橙.Kamereo=青["default"]}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./kamereo-core":4}]},{},[5]);