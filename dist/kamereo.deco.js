"use strict";function _classCallCheck(赤,橙){if(!(赤 instanceof 橙))throw new TypeError("Cannot call a class as a function")}function getColorArr(赤){if(赤.match(/^#[0-9a-fA-F]+$/)||赤.match(/^[a-zA-Z]+$/))return[赤];var 橙=void 0;赤=赤.replace(/\'/g,'"');try{橙=JSON.parse(赤)}catch(黄){console.error("invalid color.")}return 橙}Object.defineProperty(exports,"__esModule",{value:!0});var _slicedToArray=function(){function 赤(赤,橙){var 黄=[],緑=!0,青=!1,藍=void 0;try{for(var 紫,赤赤=赤[Symbol.iterator]();!(緑=(紫=赤赤.next()).done)&&(黄.push(紫.value),!橙||黄.length!==橙);緑=!0);}catch(橙赤){青=!0,藍=橙赤}finally{try{!緑&&赤赤["return"]&&赤赤["return"]()}finally{if(青)throw 藍}}return 黄}return function(橙,黄){if(Array.isArray(橙))return 橙;if(Symbol.iterator in Object(橙))return 赤(橙,黄);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),_createClass=function(){function 赤(赤,橙){for(var 黄=0;黄<橙.length;黄++){var 緑=橙[黄];緑.enumerable=緑.enumerable||!1,緑.configurable=!0,"value"in 緑&&(緑.writable=!0),Object.defineProperty(赤,緑.key,緑)}}return function(橙,黄,緑){return 黄&&赤(橙.prototype,黄),緑&&赤(橙,緑),橙}}();require("whatwg-fetch");var KamereoCore=function(){function 赤(){var 橙=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};_classCallCheck(this,赤),this.initialize(橙)}return _createClass(赤,[{key:"initialize",value:function(){var 赤=this,橙=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.elm=橙.elm,this.src=this.elm.getAttribute("data-src");var 黄=橙.from,緑=橙.to,青=this.elm.getAttribute("data-color-from"),藍=this.elm.getAttribute("data-color-to");青&&(this.fromArr=getColorArr(青)),null==黄||("string"==typeof 黄?this.fromArr=[黄]:黄 instanceof Array&&(this.fromArr=黄)),藍&&(this.toArr=getColorArr(藍)),null==緑||("string"==typeof 緑?this.toArr=[緑]:緑 instanceof Array&&(this.toArr=緑)),this.apply=橙.apply,fetch(this.src).then(function(赤){return 赤.text()}).then(function(橙){var 黄=new DOMParser,緑=黄.parseFromString(橙,"image/svg+xml");if("function"==typeof 赤.apply){緑=赤.apply(緑);var 青=new XMLSerializer;橙=青.serializeToString(緑)}var 藍=橙;if(赤.fromArr&&赤.toArr)if(1===赤.toArr.length)for(var 紫=0;紫<赤.fromArr.length;紫++)藍=藍.replace(赤.fromArr[紫],赤.toArr[0]);else for(var 赤赤=Math.min(赤.fromArr.length,赤.toArr.length),橙赤=0;赤赤>橙赤;橙赤++)藍=藍.replace(赤.fromArr[橙赤],赤.toArr[橙赤]);var 黄赤=encodeURIComponent(藍);赤.elm.style["background-image"]='url("data:image/svg+xml,'+黄赤+'")';var 緑赤=橙.match(/viewBox="([0-9]+) ([0-9]+) ([0-9]+) ([0-9]+)"/).slice(3,5),青赤=_slicedToArray(緑赤,2),藍赤=青赤[0],紫赤=青赤[1];赤.elm.style.width=藍赤+"px",赤.elm.style.height=紫赤+"px"})}}]),赤}();if(exports["default"]=KamereoCore,global.document){var elmArr=document.querySelectorAll("[data-kamereo-element]");[].forEach.call(elmArr,function(赤){new Kamereo({elm:赤})})}jQuery&&(jQuery.fn.kamereo=function(){var 赤=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};赤.elm=this[0],new Kamereo(赤)});